// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  password    String
  role        Role         @default(USER)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  userProfile UserProfile?
  donations   Request[]    @relation("donor")
  requests    Request[]    @relation("requester")

  @@map("users")
}

model Request {
  id              String        @id @default(uuid())
  donor           User?         @relation("donor", fields: [donorId], references: [id])
  donorId         String?
  requester       User          @relation("requester", fields: [requesterId], references: [id])
  requesterId     String
  phoneNumber     String
  dateOfDonation  String
  hospitalName    String
  hospitalAddress String
  reason          String
  requestStatus   RequestStatus @default(PENDING)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@map("requests")
}

model UserProfile {
  id               String     @id @default(uuid()) // Distinctive identifier for each user profile
  userId           String     @unique
  name             String
  bio              String
  age              Int
  bloodType        BloodGroup
  location         String
  availability     Boolean    @default(false)
  lastDonationDate String
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  user             User       @relation(fields: [userId], references: [id]) // User associated with the profile

  @@map("userprofiles")
}

enum BloodGroup {
  A_POSITIVE
  A_NEGATIVE
  B_POSITIVE
  B_NEGATIVE
  AB_POSITIVE
  AB_NEGATIVE
  O_POSITIVE
  O_NEGATIVE
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum Role {
  SUPER_ADMIN
  ADMIN
  MODERATOR
  USER
}
